<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.erick.gerenciadorbiblioteca.ApiTest" time="5.916" tests="24" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\erick\Development\gerenciador-biblioteca\target\test-classes;C:\Users\erick\Development\gerenciador-biblioteca\target\classes;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.2\spring-boot-starter-web-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.2\spring-boot-starter-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot\3.1.2\spring-boot-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.2\spring-boot-autoconfigure-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.2\spring-boot-starter-logging-3.1.2.jar;C:\Users\erick\.m2\repository\ch\qos\logback\logback-classic\1.4.8\logback-classic-1.4.8.jar;C:\Users\erick\.m2\repository\ch\qos\logback\logback-core\1.4.8\logback-core-1.4.8.jar;C:\Users\erick\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\erick\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\erick\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\erick\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\erick\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.2\spring-boot-starter-json-3.1.2.jar;C:\Users\erick\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\erick\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\erick\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\erick\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.2\jackson-datatype-jdk8-2.15.2.jar;C:\Users\erick\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;C:\Users\erick\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.2\jackson-module-parameter-names-2.15.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.2\spring-boot-starter-tomcat-3.1.2.jar;C:\Users\erick\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.11\tomcat-embed-core-10.1.11.jar;C:\Users\erick\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.11\tomcat-embed-el-10.1.11.jar;C:\Users\erick\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.11\tomcat-embed-websocket-10.1.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-web\6.0.11\spring-web-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-beans\6.0.11\spring-beans-6.0.11.jar;C:\Users\erick\.m2\repository\io\micrometer\micrometer-observation\1.11.2\micrometer-observation-1.11.2.jar;C:\Users\erick\.m2\repository\io\micrometer\micrometer-commons\1.11.2\micrometer-commons-1.11.2.jar;C:\Users\erick\.m2\repository\org\springframework\spring-webmvc\6.0.11\spring-webmvc-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-aop\6.0.11\spring-aop-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-context\6.0.11\spring-context-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-expression\6.0.11\spring-expression-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.1.2\spring-boot-starter-data-jpa-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.1.2\spring-boot-starter-aop-3.1.2.jar;C:\Users\erick\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.1.2\spring-boot-starter-jdbc-3.1.2.jar;C:\Users\erick\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\erick\.m2\repository\org\springframework\spring-jdbc\6.0.11\spring-jdbc-6.0.11.jar;C:\Users\erick\.m2\repository\org\hibernate\orm\hibernate-core\6.2.6.Final\hibernate-core-6.2.6.Final.jar;C:\Users\erick\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\erick\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\erick\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\erick\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\erick\.m2\repository\net\bytebuddy\byte-buddy\1.14.5\byte-buddy-1.14.5.jar;C:\Users\erick\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\erick\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\erick\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\erick\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\erick\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\erick\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\erick\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\erick\.m2\repository\org\springframework\data\spring-data-jpa\3.1.2\spring-data-jpa-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\data\spring-data-commons\3.1.2\spring-data-commons-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\spring-orm\6.0.11\spring-orm-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-tx\6.0.11\spring-tx-6.0.11.jar;C:\Users\erick\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\erick\.m2\repository\org\springframework\spring-aspects\6.0.11\spring-aspects-6.0.11.jar;C:\Users\erick\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\erick\.m2\repository\com\h2database\h2\2.2.220\h2-2.2.220.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.2\spring-boot-starter-test-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-test\3.1.2\spring-boot-test-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.2\spring-boot-test-autoconfigure-3.1.2.jar;C:\Users\erick\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\erick\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\erick\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\erick\.m2\repository\net\minidev\json-smart\2.4.11\json-smart-2.4.11.jar;C:\Users\erick\.m2\repository\net\minidev\accessors-smart\2.4.11\accessors-smart-2.4.11.jar;C:\Users\erick\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\erick\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\erick\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\erick\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\erick\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\erick\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\erick\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\erick\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\erick\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\erick\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\erick\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\erick\.m2\repository\org\mockito\mockito-core\5.3.1\mockito-core-5.3.1.jar;C:\Users\erick\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.5\byte-buddy-agent-1.14.5.jar;C:\Users\erick\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\erick\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\erick\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\erick\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\erick\.m2\repository\org\springframework\spring-core\6.0.11\spring-core-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-jcl\6.0.11\spring-jcl-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-test\6.0.11\spring-test-6.0.11.jar;C:\Users\erick\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\erick\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.0.Final\hibernate-validator-8.0.0.Final.jar;C:\Users\erick\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\erick\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\erick\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;"/>
    <property name="java.vm.vendor" value="JetBrains s.r.o."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://openjdk.java.net/"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="BR"/>
    <property name="sun.boot.library.path" value="C:\Users\erick\.jdks\jbr-17.0.8\bin"/>
    <property name="sun.java.command" value="C:\Users\erick\AppData\Local\Temp\surefire11673248115538853559\surefirebooter-20230821184901565_3.jar C:\Users\erick\AppData\Local\Temp\surefire11673248115538853559 2023-08-21T18-49-01_425-jvmRun1 surefire-20230821184901565_1tmp surefire_0-20230821184901565_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\erick\Development\gerenciador-biblioteca\target\test-classes;C:\Users\erick\Development\gerenciador-biblioteca\target\classes;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.2\spring-boot-starter-web-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.2\spring-boot-starter-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot\3.1.2\spring-boot-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.2\spring-boot-autoconfigure-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.2\spring-boot-starter-logging-3.1.2.jar;C:\Users\erick\.m2\repository\ch\qos\logback\logback-classic\1.4.8\logback-classic-1.4.8.jar;C:\Users\erick\.m2\repository\ch\qos\logback\logback-core\1.4.8\logback-core-1.4.8.jar;C:\Users\erick\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\erick\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\erick\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\erick\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\erick\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.2\spring-boot-starter-json-3.1.2.jar;C:\Users\erick\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\erick\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\erick\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\erick\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.2\jackson-datatype-jdk8-2.15.2.jar;C:\Users\erick\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;C:\Users\erick\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.2\jackson-module-parameter-names-2.15.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.2\spring-boot-starter-tomcat-3.1.2.jar;C:\Users\erick\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.11\tomcat-embed-core-10.1.11.jar;C:\Users\erick\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.11\tomcat-embed-el-10.1.11.jar;C:\Users\erick\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.11\tomcat-embed-websocket-10.1.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-web\6.0.11\spring-web-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-beans\6.0.11\spring-beans-6.0.11.jar;C:\Users\erick\.m2\repository\io\micrometer\micrometer-observation\1.11.2\micrometer-observation-1.11.2.jar;C:\Users\erick\.m2\repository\io\micrometer\micrometer-commons\1.11.2\micrometer-commons-1.11.2.jar;C:\Users\erick\.m2\repository\org\springframework\spring-webmvc\6.0.11\spring-webmvc-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-aop\6.0.11\spring-aop-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-context\6.0.11\spring-context-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-expression\6.0.11\spring-expression-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.1.2\spring-boot-starter-data-jpa-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.1.2\spring-boot-starter-aop-3.1.2.jar;C:\Users\erick\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.1.2\spring-boot-starter-jdbc-3.1.2.jar;C:\Users\erick\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\erick\.m2\repository\org\springframework\spring-jdbc\6.0.11\spring-jdbc-6.0.11.jar;C:\Users\erick\.m2\repository\org\hibernate\orm\hibernate-core\6.2.6.Final\hibernate-core-6.2.6.Final.jar;C:\Users\erick\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\erick\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\erick\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\erick\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\erick\.m2\repository\net\bytebuddy\byte-buddy\1.14.5\byte-buddy-1.14.5.jar;C:\Users\erick\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\erick\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\erick\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\erick\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\erick\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\erick\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\erick\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\erick\.m2\repository\org\springframework\data\spring-data-jpa\3.1.2\spring-data-jpa-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\data\spring-data-commons\3.1.2\spring-data-commons-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\spring-orm\6.0.11\spring-orm-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-tx\6.0.11\spring-tx-6.0.11.jar;C:\Users\erick\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\erick\.m2\repository\org\springframework\spring-aspects\6.0.11\spring-aspects-6.0.11.jar;C:\Users\erick\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\erick\.m2\repository\com\h2database\h2\2.2.220\h2-2.2.220.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.2\spring-boot-starter-test-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-test\3.1.2\spring-boot-test-3.1.2.jar;C:\Users\erick\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.2\spring-boot-test-autoconfigure-3.1.2.jar;C:\Users\erick\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\erick\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\erick\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\erick\.m2\repository\net\minidev\json-smart\2.4.11\json-smart-2.4.11.jar;C:\Users\erick\.m2\repository\net\minidev\accessors-smart\2.4.11\accessors-smart-2.4.11.jar;C:\Users\erick\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\erick\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\erick\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\erick\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\erick\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\erick\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\erick\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\erick\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\erick\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\erick\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\erick\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\erick\.m2\repository\org\mockito\mockito-core\5.3.1\mockito-core-5.3.1.jar;C:\Users\erick\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.5\byte-buddy-agent-1.14.5.jar;C:\Users\erick\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\erick\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\erick\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\erick\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\erick\.m2\repository\org\springframework\spring-core\6.0.11\spring-core-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-jcl\6.0.11\spring-jcl-6.0.11.jar;C:\Users\erick\.m2\repository\org\springframework\spring-test\6.0.11\spring-test-6.0.11.jar;C:\Users\erick\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\erick\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.0.Final\hibernate-validator-8.0.0.Final.jar;C:\Users\erick\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\erick\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\erick\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\erick"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-07-18"/>
    <property name="java.home" value="C:\Users\erick\.jdks\jbr-17.0.8"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\erick\Development\gerenciador-biblioteca"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="windows-1252"/>
    <property name="java.awt.headless" value="true"/>
    <property name="jbr.virtualization.information" value="Hyper-V role"/>
    <property name="surefire.real.class.path" value="C:\Users\erick\AppData\Local\Temp\surefire11673248115538853559\surefirebooter-20230821184901565_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.8+7-b1000.8"/>
    <property name="user.name" value="erick"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="JBR-17.0.8+7-1000.8-nomod"/>
    <property name="localRepository" value="C:\Users\erick\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\erick\AppData\Local\Temp\"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.8"/>
    <property name="user.dir" value="C:\Users\erick\Development\gerenciador-biblioteca"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="5896"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="windows-1252"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Users\erick\.jdks\jbr-17.0.8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\erick\AppData\Roaming\nvm;C:\Program Files\nodejs;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Users\erick\Development\apache-maven-3.9.4-bin\apache-maven-3.9.4\bin;%JAVA_HOME%\bin;C:\Users\erick\AppData\Local\Microsoft\WindowsApps;C:\Users\erick\AppData\Roaming\nvm;C:\Program Files\nodejs;C:\Program Files\MySQL\MySQL Server 8.0\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2023.1.3\bin;;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="JetBrains s.r.o."/>
    <property name="java.vm.version" value="17.0.8+7-b1000.8"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="testGetUsuariosEmprestimosAtivos" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.766">
    <system-out><![CDATA[18:49:02.487 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.erick.gerenciadorbiblioteca.ApiTest]: ApiTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
18:49:02.612 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.erick.gerenciadorbiblioteca.GerenciadorBibliotecaApplication for test class com.erick.gerenciadorbiblioteca.ApiTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2023-08-21T18:49:03.080-03:00  INFO 5896 --- [           main] c.erick.gerenciadorbiblioteca.ApiTest    : Starting ApiTest using Java 17.0.8 with PID 5896 (started by erick in C:\Users\erick\Development\gerenciador-biblioteca)
2023-08-21T18:49:03.080-03:00  INFO 5896 --- [           main] c.erick.gerenciadorbiblioteca.ApiTest    : No active profile set, falling back to 1 default profile: "default"
2023-08-21T18:49:03.825-03:00  INFO 5896 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-21T18:49:03.903-03:00  INFO 5896 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 68 ms. Found 3 JPA repository interfaces.
2023-08-21T18:49:04.341-03:00  INFO 5896 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-21T18:49:04.419-03:00  INFO 5896 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.6.Final
2023-08-21T18:49:04.419-03:00  INFO 5896 --- [           main] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2023-08-21T18:49:04.622-03:00  INFO 5896 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-08-21T18:49:04.747-03:00  INFO 5896 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-08-21T18:49:04.778-03:00  INFO 5896 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-21T18:49:04.981-03:00  INFO 5896 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:biblioteca user=SA
2023-08-21T18:49:04.981-03:00  INFO 5896 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-21T18:49:05.263-03:00  INFO 5896 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-08-21T18:49:05.903-03:00  INFO 5896 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: drop table if exists emprestimo cascade 
Hibernate: drop table if exists livro cascade 
Hibernate: drop table if exists usuario cascade 
Hibernate: drop sequence if exists emprestimo_seq
Hibernate: drop sequence if exists livro_seq
Hibernate: drop sequence if exists usuario_seq
Hibernate: create sequence emprestimo_seq start with 1 increment by 50
Hibernate: create sequence livro_seq start with 1 increment by 50
Hibernate: create sequence usuario_seq start with 1 increment by 50
Hibernate: create table emprestimo (data_devolucao date, data_emprestimo date not null, id bigint not null, livro_id bigint not null, usuario_id bigint not null, primary key (id))
Hibernate: create table livro (disponivel boolean not null, id bigint not null, autor varchar(255) not null, titulo varchar(255) not null, primary key (id))
Hibernate: create table usuario (id bigint not null, email varchar(255) not null unique, nome varchar(255) not null unique, telefone varchar(255) not null, primary key (id))
Hibernate: alter table if exists emprestimo add constraint FKlraqo5mkov260qr5h3es93sgr foreign key (livro_id) references livro
Hibernate: alter table if exists emprestimo add constraint FKn0k2927f8w348cfiahkff1rhk foreign key (usuario_id) references usuario
2023-08-21T18:49:05.935-03:00  INFO 5896 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-21T18:49:06.528-03:00  WARN 5896 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-21T18:49:06.856-03:00  INFO 5896 --- [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:biblioteca'
2023-08-21T18:49:06.903-03:00  INFO 5896 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-08-21T18:49:06.903-03:00  INFO 5896 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-08-21T18:49:06.903-03:00  INFO 5896 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2023-08-21T18:49:06.919-03:00  INFO 5896 --- [           main] c.erick.gerenciadorbiblioteca.ApiTest    : Started ApiTest in 4.147 seconds (process running for 5.225)
Hibernate: select next value for usuario_seq
Hibernate: insert into usuario (email,nome,telefone,id) values (?,?,?,?)
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
Hibernate: select e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,e1_0.usuario_id from emprestimo e1_0 where e1_0.usuario_id=? and e1_0.data_devolucao is null
]]></system-out>
  </testcase>
  <testcase name="testGetUsuarioById" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.062">
    <system-out><![CDATA[Hibernate: select next value for usuario_seq
Hibernate: insert into usuario (email,nome,telefone,id) values (?,?,?,?)
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
Hibernate: select e1_0.usuario_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from emprestimo e1_0 left join livro l1_0 on l1_0.id=e1_0.livro_id where e1_0.usuario_id=?
]]></system-out>
  </testcase>
  <testcase name="testPostEmprestimos" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.078">
    <system-out><![CDATA[Hibernate: insert into usuario (email,nome,telefone,id) values (?,?,?,?)
Hibernate: select next value for livro_seq
Hibernate: insert into livro (autor,disponivel,titulo,id) values (?,?,?,?)
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where l1_0.id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
Hibernate: select e1_0.id from emprestimo e1_0 where e1_0.usuario_id=? and e1_0.livro_id=? and e1_0.data_devolucao is null fetch first ? rows only
Hibernate: select count(e1_0.id) from emprestimo e1_0 where e1_0.usuario_id=? and e1_0.data_devolucao is null
Hibernate: select next value for emprestimo_seq
Hibernate: insert into emprestimo (data_devolucao,data_emprestimo,livro_id,usuario_id,id) values (?,?,?,?,?)
Hibernate: update livro set autor=?,disponivel=?,titulo=? where id=?
]]></system-out>
  </testcase>
  <testcase name="testPutUsuarios" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.032">
    <system-out><![CDATA[Hibernate: insert into usuario (email,nome,telefone,id) values (?,?,?,?)
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
Hibernate: update usuario set email=?,nome=?,telefone=? where id=?
Hibernate: select e1_0.usuario_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from emprestimo e1_0 left join livro l1_0 on l1_0.id=e1_0.livro_id where e1_0.usuario_id=?
]]></system-out>
  </testcase>
  <testcase name="testGetLivrosEmprestimosDevolvidos" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.015">
    <system-out><![CDATA[Hibernate: select next value for livro_seq
Hibernate: insert into livro (autor,disponivel,titulo,id) values (?,?,?,?)
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where l1_0.id=?
Hibernate: select e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,e1_0.usuario_id from emprestimo e1_0 where e1_0.livro_id=? and e1_0.data_devolucao is not null
]]></system-out>
  </testcase>
  <testcase name="testPutLivros" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0">
    <system-out><![CDATA[Hibernate: insert into livro (autor,disponivel,titulo,id) values (?,?,?,?)
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where l1_0.id=?
Hibernate: update livro set autor=?,disponivel=?,titulo=? where id=?
Hibernate: select e1_0.livro_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 left join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.livro_id=?
]]></system-out>
  </testcase>
  <testcase name="testDeleteLivros" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.016">
    <system-out><![CDATA[Hibernate: insert into livro (autor,disponivel,titulo,id) values (?,?,?,?)
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where l1_0.id=?
Hibernate: select e1_0.livro_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 left join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.livro_id=?
Hibernate: delete from livro where id=?
]]></system-out>
  </testcase>
  <testcase name="testGetLivrosPesquisa" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.031">
    <system-out><![CDATA[Hibernate: insert into livro (autor,disponivel,titulo,id) values (?,?,?,?)
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where upper(l1_0.autor) like upper(?) escape '\' or upper(l1_0.titulo) like upper(?) escape '\'
Hibernate: select e1_0.livro_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 left join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.livro_id=?
Hibernate: select e1_0.livro_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 left join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.livro_id=?
Hibernate: select e1_0.livro_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 left join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.livro_id=?
]]></system-out>
  </testcase>
  <testcase name="testGetEmprestimos" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0">
    <system-out><![CDATA[Hibernate: select e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,e1_0.usuario_id from emprestimo e1_0
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where l1_0.id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="testGetEmprestimosPesquisa" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0">
    <system-out><![CDATA[Hibernate: select e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,e1_0.usuario_id from emprestimo e1_0 left join livro l1_0 on l1_0.id=e1_0.livro_id left join usuario u1_0 on u1_0.id=e1_0.usuario_id where l1_0.titulo like ? escape '\' or u1_0.nome like ? escape '\'
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where l1_0.id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="testPatchEmprestimos" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.015">
    <system-out><![CDATA[Hibernate: insert into usuario (email,nome,telefone,id) values (?,?,?,?)
Hibernate: insert into livro (autor,disponivel,titulo,id) values (?,?,?,?)
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where l1_0.id=?
Hibernate: select next value for emprestimo_seq
Hibernate: insert into emprestimo (data_devolucao,data_emprestimo,livro_id,usuario_id,id) values (?,?,?,?,?)
Hibernate: select e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 join livro l1_0 on l1_0.id=e1_0.livro_id join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.id=?
Hibernate: update emprestimo set data_devolucao=?,data_emprestimo=?,livro_id=?,usuario_id=? where id=?
]]></system-out>
  </testcase>
  <testcase name="testPostUsuarios" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.032">
    <system-out><![CDATA[Hibernate: insert into usuario (email,nome,telefone,id) values (?,?,?,?)
Hibernate: insert into usuario (email,nome,telefone,id) values (?,?,?,?)
2023-08-21T18:49:08.044-03:00  WARN 5896 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 23505, SQLState: 23505
2023-08-21T18:49:08.044-03:00 ERROR 5896 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Unique index or primary key violation: "PUBLIC.CONSTRAINT_INDEX_2 ON PUBLIC.USUARIO(EMAIL NULLS FIRST) VALUES ( /* 6 */ 'hermione@email.com' )"; SQL statement:
insert into usuario (email,nome,telefone,id) values (?,?,?,?) [23505-220]
]]></system-out>
  </testcase>
  <testcase name="testPostLivros" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0">
    <system-out><![CDATA[Hibernate: insert into livro (autor,disponivel,titulo,id) values (?,?,?,?)
]]></system-out>
  </testcase>
  <testcase name="testGetEmprestimoById" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.016">
    <system-out><![CDATA[Hibernate: insert into usuario (email,nome,telefone,id) values (?,?,?,?)
Hibernate: insert into livro (autor,disponivel,titulo,id) values (?,?,?,?)
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where l1_0.id=?
Hibernate: insert into emprestimo (data_devolucao,data_emprestimo,livro_id,usuario_id,id) values (?,?,?,?,?)
Hibernate: select e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 join livro l1_0 on l1_0.id=e1_0.livro_id join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="testDeleteUsuarios" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.015">
    <system-out><![CDATA[Hibernate: insert into usuario (email,nome,telefone,id) values (?,?,?,?)
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
Hibernate: delete from usuario where id=?
]]></system-out>
  </testcase>
  <testcase name="testGetLivros" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.016">
    <system-out><![CDATA[Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0
Hibernate: select e1_0.livro_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 left join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.livro_id=?
Hibernate: select e1_0.livro_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 left join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.livro_id=?
Hibernate: select e1_0.livro_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 left join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.livro_id=?
Hibernate: select e1_0.livro_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 left join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.livro_id=?
Hibernate: select e1_0.livro_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 left join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.livro_id=?
Hibernate: select e1_0.livro_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 left join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.livro_id=?
Hibernate: select e1_0.livro_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 left join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.livro_id=?
]]></system-out>
  </testcase>
  <testcase name="testGetLivrosEmprestimos" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.016">
    <system-out><![CDATA[Hibernate: insert into livro (autor,disponivel,titulo,id) values (?,?,?,?)
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where l1_0.id=?
Hibernate: select e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,e1_0.usuario_id from emprestimo e1_0 where e1_0.livro_id=?
]]></system-out>
  </testcase>
  <testcase name="testGetEmprestimosAtivos" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.015">
    <system-out><![CDATA[Hibernate: select e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,e1_0.usuario_id from emprestimo e1_0 where e1_0.data_devolucao is null
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where l1_0.id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where l1_0.id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="testGetEmprestimosDevolvidos" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.016">
    <system-out><![CDATA[Hibernate: select e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,e1_0.usuario_id from emprestimo e1_0 where e1_0.data_devolucao is not null
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where l1_0.id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="testGetUsuarios" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.031">
    <system-out><![CDATA[Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0
Hibernate: select e1_0.usuario_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from emprestimo e1_0 left join livro l1_0 on l1_0.id=e1_0.livro_id where e1_0.usuario_id=?
Hibernate: select e1_0.usuario_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from emprestimo e1_0 left join livro l1_0 on l1_0.id=e1_0.livro_id where e1_0.usuario_id=?
Hibernate: select e1_0.usuario_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from emprestimo e1_0 left join livro l1_0 on l1_0.id=e1_0.livro_id where e1_0.usuario_id=?
Hibernate: select e1_0.usuario_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from emprestimo e1_0 left join livro l1_0 on l1_0.id=e1_0.livro_id where e1_0.usuario_id=?
Hibernate: select e1_0.usuario_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from emprestimo e1_0 left join livro l1_0 on l1_0.id=e1_0.livro_id where e1_0.usuario_id=?
Hibernate: select e1_0.usuario_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from emprestimo e1_0 left join livro l1_0 on l1_0.id=e1_0.livro_id where e1_0.usuario_id=?
Hibernate: select e1_0.usuario_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from emprestimo e1_0 left join livro l1_0 on l1_0.id=e1_0.livro_id where e1_0.usuario_id=?
]]></system-out>
  </testcase>
  <testcase name="testGetUsuariosEmprestimos" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.016">
    <system-out><![CDATA[Hibernate: insert into usuario (email,nome,telefone,id) values (?,?,?,?)
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
Hibernate: select e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,e1_0.usuario_id from emprestimo e1_0 where e1_0.usuario_id=?
]]></system-out>
  </testcase>
  <testcase name="testGetUsuariosEmprestimosDevolvidos" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0.016">
    <system-out><![CDATA[Hibernate: insert into usuario (email,nome,telefone,id) values (?,?,?,?)
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where u1_0.id=?
Hibernate: select e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,e1_0.usuario_id from emprestimo e1_0 where e1_0.usuario_id=? and e1_0.data_devolucao is not null
]]></system-out>
  </testcase>
  <testcase name="testGetLivrosById" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0">
    <system-out><![CDATA[Hibernate: insert into livro (autor,disponivel,titulo,id) values (?,?,?,?)
Hibernate: select l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from livro l1_0 where l1_0.id=?
Hibernate: select e1_0.livro_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.usuario_id,u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from emprestimo e1_0 left join usuario u1_0 on u1_0.id=e1_0.usuario_id where e1_0.livro_id=?
]]></system-out>
  </testcase>
  <testcase name="testGetUsuariosPesquisa" classname="com.erick.gerenciadorbiblioteca.ApiTest" time="0">
    <system-out><![CDATA[Hibernate: insert into usuario (email,nome,telefone,id) values (?,?,?,?)
Hibernate: select u1_0.id,u1_0.email,u1_0.nome,u1_0.telefone from usuario u1_0 where upper(u1_0.nome) like upper(?) escape '\' or upper(u1_0.email) like upper(?) escape '\'
Hibernate: select e1_0.usuario_id,e1_0.id,e1_0.data_devolucao,e1_0.data_emprestimo,e1_0.livro_id,l1_0.id,l1_0.autor,l1_0.disponivel,l1_0.titulo from emprestimo e1_0 left join livro l1_0 on l1_0.id=e1_0.livro_id where e1_0.usuario_id=?
]]></system-out>
  </testcase>
</testsuite>